Part
====

A part is a building block that can be placed in a `region` on a page or layout. As
with pages, each part is composed of a JavaScript controller, an XML descriptor and an HTML view.

The part descriptor and controller files must be placed in the folder ``site/parts/[part-name]``

The part **descriptor** is where input fields are defined for custom configuration of the part. The descriptor is not required if the part
does not need any custom configuration. Parts cannot contain regions.

When used, the descriptor file must have the same name as the `part` folder that contains it ``site/parts/[part-name]/[part-name].xml``:

.. literalinclude:: code/part.xml
   :language: xml

To drive this part, we will also need a **controller**. The `controller <../controller/index.html>`_ typically uses library functions to get
content and/or configurations and prepare data which it passes to the view file for dynamic rendering.

::

  site/parts/[part-name]/[part-name].js

.. literalinclude:: code/controller.js
   :language: javascript

The HTML generated by the part must have a single root element. The ``things`` parameter is basically just JSON data passed from the
controller and we can iterate over it easily in Thymeleaf and print its values.

.. literalinclude:: code/thymeleaf.html
   :language: html

The part can now be added to the page via drag and drop. You will be able to configure the part in the *context window*
in live-edit.
